فرایند Normalization یا همان نرمال سازی به کاهش افزونگی داده ها گفته می شود.
به عبارت دیگر این فرایند همان پخش کردن داده های یک دیتابیس (پایگاه داده) بین چندین جدول و اتصال آن هاست.
گاهی در پروژه های بزرگ با حجم ترافیک بالا فرآیند نرمال سازی و افزونگی داده ها باعث افت قابل توجه سرعت پاسخگویی می شود.
بنابراین به زبان ساده در پروژه های بزرگ باید تا می توانیم از ایجاد جداول اضافه جلوگیری کنیم. 
طبیعتا با تقسیم کردن داده ها بین جدول های کوچکتر مدیریت اطلاعات امری ساده تر می شود اما به جهت سرعت پاسخگویی بهتر باید از این مسئله صرف نظر کرد.

فرض کنید برنامه ای داریم که در پایگاه داده آن دو جدول با نام های profiles و addresses وجود دارد.
در جدول addresses ستون های زیر وجود دارد :
id
location
postal_code
phone_number

همچنین در جدول profiles ستون هایی مانند مثال های زیر وجود دارد :
id 
user_name
first_name
last_name
, ....
address_id
و address_id یک کلید خارجی به جدول addresses است.

زمانی که ما با ترافیک بالای کاربران سر و کار داریم و سرعت مبادله اطلاعات از اهمیت بالایی برخوردار است می توانیم از جدول addresses صرف نظر کنیم و ستون های آن را به ستون های جدول profiles اضافه کنیم.
طبیعتا پردازش اطلاعات و کار با داده ها در این دو جدول ساده تر از حالتی است که فقط یک جدول وجود دارد. اما در شرایط خاص این امر ضروری است و به آن Denormalization می گوییم.

این فرآیند را می توان به نوشتن کلاس های اضافی تشبیه کرد چرا که این دو مفهوم شباهت های بسیار زیادی دارند.
همچنین معمولا در برنامه نویسی شیئ گرا در پایگاه داده هر جدول وظیفه نگهداری اشیاء یک کلاس را به عهده دارد.
